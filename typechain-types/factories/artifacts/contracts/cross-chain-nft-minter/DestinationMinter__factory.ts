/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DestinationMinter,
  DestinationMinterInterface,
} from "../../../../artifacts/contracts/cross-chain-nft-minter/DestinationMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "MintCallSuccessfull",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405162000c4638038062000c46833981810160405281019061003491906101c7565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a75760006040517fd7f7333400000000000000000000000000000000000000000000000000000000815260040161009e9190610216565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610231565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019482610169565b9050919050565b6101a481610189565b81146101af57600080fd5b50565b6000815190506101c18161019b565b92915050565b600080604083850312156101de576101dd610164565b5b60006101ec858286016101b2565b92505060206101fd858286016101b2565b9150509250929050565b61021081610189565b82525050565b600060208201905061022b6000830184610207565b92915050565b6080516109f262000254600039600081816101ad015261025401526109f26000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461005157806385572ffb14610081578063b0f479a11461009d578063f887ea40146100bb575b600080fd5b61006b600480360381019061006691906103d5565b6100d9565b604051610078919061041d565b60405180910390f35b61009b6004803603810190610096919061045c565b6101ab565b005b6100a5610250565b6040516100b291906104e6565b60405180910390f35b6100c3610278565b6040516100d091906104e6565b60405180910390f35b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806101a457507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023b57336040517fd7f7333400000000000000000000000000000000000000000000000000000000815260040161023291906104e6565b60405180910390fd5b61024d8161024890610921565b61029c565b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682606001516040516102e991906109a5565b6000604051808303816000865af19150503d8060008114610326576040519150601f19603f3d011682016040523d82523d6000602084013e61032b565b606091505b505090508061033957600080fd5b7fa8bcb6a278444293ea5c0bce4a4734a060a5f557bb999d8a57c4f69e96f1fe8860405160405180910390a15050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6103b28161037d565b81146103bd57600080fd5b50565b6000813590506103cf816103a9565b92915050565b6000602082840312156103eb576103ea610373565b5b60006103f9848285016103c0565b91505092915050565b60008115159050919050565b61041781610402565b82525050565b6000602082019050610432600083018461040e565b92915050565b600080fd5b600060a0828403121561045357610452610438565b5b81905092915050565b60006020828403121561047257610471610373565b5b600082013567ffffffffffffffff8111156104905761048f610378565b5b61049c8482850161043d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104d0826104a5565b9050919050565b6104e0816104c5565b82525050565b60006020820190506104fb60008301846104d7565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61054f82610506565b810181811067ffffffffffffffff8211171561056e5761056d610517565b5b80604052505050565b6000610581610369565b905061058d8282610546565b919050565b600080fd5b6000819050919050565b6105aa81610597565b81146105b557600080fd5b50565b6000813590506105c7816105a1565b92915050565b600067ffffffffffffffff82169050919050565b6105ea816105cd565b81146105f557600080fd5b50565b600081359050610607816105e1565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561063257610631610517565b5b61063b82610506565b9050602081019050919050565b82818337600083830152505050565b600061066a61066584610617565b610577565b90508281526020810184848401111561068657610685610612565b5b610691848285610648565b509392505050565b600082601f8301126106ae576106ad61060d565b5b81356106be848260208601610657565b91505092915050565b600067ffffffffffffffff8211156106e2576106e1610517565b5b602082029050602081019050919050565b600080fd5b610701816104c5565b811461070c57600080fd5b50565b60008135905061071e816106f8565b92915050565b6000819050919050565b61073781610724565b811461074257600080fd5b50565b6000813590506107548161072e565b92915050565b6000604082840312156107705761076f610501565b5b61077a6040610577565b9050600061078a8482850161070f565b600083015250602061079e84828501610745565b60208301525092915050565b60006107bd6107b8846106c7565b610577565b905080838252602082019050604084028301858111156107e0576107df6106f3565b5b835b8181101561080957806107f5888261075a565b8452602084019350506040810190506107e2565b5050509392505050565b600082601f8301126108285761082761060d565b5b81356108388482602086016107aa565b91505092915050565b600060a0828403121561085757610856610501565b5b61086160a0610577565b90506000610871848285016105b8565b6000830152506020610885848285016105f8565b602083015250604082013567ffffffffffffffff8111156108a9576108a8610592565b5b6108b584828501610699565b604083015250606082013567ffffffffffffffff8111156108d9576108d8610592565b5b6108e584828501610699565b606083015250608082013567ffffffffffffffff81111561090957610908610592565b5b61091584828501610813565b60808301525092915050565b600061092d3683610841565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561096857808201518184015260208101905061094d565b60008484015250505050565b600061097f82610934565b610989818561093f565b935061099981856020860161094a565b80840191505092915050565b60006109b18284610974565b91508190509291505056fea26469706673582212201fabb73cb2147f08a3d23e122255b7cbb6c6528674875a82b01414c923e3cc6964736f6c63430008180033";

type DestinationMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DestinationMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DestinationMinter__factory extends ContractFactory {
  constructor(...args: DestinationMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_router, nftAddress, overrides || {});
  }
  override deploy(
    _router: AddressLike,
    nftAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_router, nftAddress, overrides || {}) as Promise<
      DestinationMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DestinationMinter__factory {
    return super.connect(runner) as DestinationMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DestinationMinterInterface {
    return new Interface(_abi) as DestinationMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DestinationMinter {
    return new Contract(address, _abi, runner) as unknown as DestinationMinter;
  }
}
