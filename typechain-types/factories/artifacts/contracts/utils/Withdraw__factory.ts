/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Withdraw,
  WithdrawInterface,
} from "../../../../artifacts/contracts/utils/Withdraw";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000087576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007e90620002a7565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146200010e576200010d816200011760201b60201c565b5b5050506200033b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000188576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200017f9062000319565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200028f60188362000246565b91506200029c8262000257565b602082019050919050565b60006020820190508181036000830152620002c28162000280565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200030160178362000246565b91506200030e82620002c9565b602082019050919050565b600060208201905081810360008301526200033481620002f2565b9050919050565b610d2c806200034b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633aeac4e11461005c57806351cff8d91461007857806379ba5097146100945780638da5cb5b1461009e578063f2fde38b146100bc575b600080fd5b61007660048036038101906100719190610910565b6100d8565b005b610092600480360381019061008d9190610950565b61018e565b005b61009c610252565b005b6100a66103e7565b6040516100b3919061098c565b60405180910390f35b6100d660048036038101906100d19190610950565b610410565b005b6100e0610424565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161011b919061098c565b602060405180830381865afa158015610138573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015c91906109dd565b905061018983828473ffffffffffffffffffffffffffffffffffffffff166104b49092919063ffffffff16565b505050565b610196610424565b600047905060008273ffffffffffffffffffffffffffffffffffffffff16826040516101c190610a3b565b60006040518083038185875af1925050503d80600081146101fe576040519150601f19603f3d011682016040523d82523d6000602084013e610203565b606091505b505090508061024d573383836040517f9d11f56300000000000000000000000000000000000000000000000000000000815260040161024493929190610a5f565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d990610af3565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610418610424565b61042181610533565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a990610b5f565b60405180910390fd5b565b61052e838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016104e7929190610b7f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061065f565b505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059890610bf4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600061068a828473ffffffffffffffffffffffffffffffffffffffff166106f690919063ffffffff16565b905060008151141580156106af5750808060200190518101906106ad9190610c4c565b155b156106f157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016106e8919061098c565b60405180910390fd5b505050565b60606107048383600061070c565b905092915050565b60608147101561075357306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161074a919061098c565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161077c9190610cdf565b60006040518083038185875af1925050503d80600081146107b9576040519150601f19603f3d011682016040523d82523d6000602084013e6107be565b606091505b50915091506107ce8683836107d9565b925050509392505050565b6060826107ee576107e982610868565b610860565b60008251148015610816575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561085857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161084f919061098c565b60405180910390fd5b819050610861565b5b9392505050565b60008151111561087b5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108dd826108b2565b9050919050565b6108ed816108d2565b81146108f857600080fd5b50565b60008135905061090a816108e4565b92915050565b60008060408385031215610927576109266108ad565b5b6000610935858286016108fb565b9250506020610946858286016108fb565b9150509250929050565b600060208284031215610966576109656108ad565b5b6000610974848285016108fb565b91505092915050565b610986816108d2565b82525050565b60006020820190506109a1600083018461097d565b92915050565b6000819050919050565b6109ba816109a7565b81146109c557600080fd5b50565b6000815190506109d7816109b1565b92915050565b6000602082840312156109f3576109f26108ad565b5b6000610a01848285016109c8565b91505092915050565b600081905092915050565b50565b6000610a25600083610a0a565b9150610a3082610a15565b600082019050919050565b6000610a4682610a18565b9150819050919050565b610a59816109a7565b82525050565b6000606082019050610a74600083018661097d565b610a81602083018561097d565b610a8e6040830184610a50565b949350505050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b6000610add601683610a96565b9150610ae882610aa7565b602082019050919050565b60006020820190508181036000830152610b0c81610ad0565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000610b49601683610a96565b9150610b5482610b13565b602082019050919050565b60006020820190508181036000830152610b7881610b3c565b9050919050565b6000604082019050610b94600083018561097d565b610ba16020830184610a50565b9392505050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000610bde601783610a96565b9150610be982610ba8565b602082019050919050565b60006020820190508181036000830152610c0d81610bd1565b9050919050565b60008115159050919050565b610c2981610c14565b8114610c3457600080fd5b50565b600081519050610c4681610c20565b92915050565b600060208284031215610c6257610c616108ad565b5b6000610c7084828501610c37565b91505092915050565b600081519050919050565b60005b83811015610ca2578082015181840152602081019050610c87565b60008484015250505050565b6000610cb982610c79565b610cc38185610a0a565b9350610cd3818560208601610c84565b80840191505092915050565b6000610ceb8284610cae565b91508190509291505056fea2646970667358221220286103591bc763d5eb47ef2dc9888be70fa9043026e526a76cc5ce8b5bb72af964736f6c63430008180033";

type WithdrawConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WithdrawConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Withdraw__factory extends ContractFactory {
  constructor(...args: WithdrawConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Withdraw & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Withdraw__factory {
    return super.connect(runner) as Withdraw__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WithdrawInterface {
    return new Interface(_abi) as WithdrawInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Withdraw {
    return new Contract(address, _abi, runner) as unknown as Withdraw;
  }
}
