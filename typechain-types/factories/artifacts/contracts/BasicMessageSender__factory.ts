/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicMessageSender,
  BasicMessageSenderInterface,
} from "../../../artifacts/contracts/BasicMessageSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "string",
        name: "messageText",
        type: "string",
      },
      {
        internalType: "enum BasicMessageSender.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001c4338038062001c4383398181016040528101906200003791906200033f565b338060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000ac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a390620003e7565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161462000133576200013281620001a660201b60201c565b5b5050508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506200047b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000217576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200020e9062000459565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030782620002da565b9050919050565b6200031981620002fa565b81146200032557600080fd5b50565b60008151905062000339816200030e565b92915050565b60008060408385031215620003595762000358620002d5565b5b6000620003698582860162000328565b92505060206200037c8582860162000328565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b6000620003cf60188362000386565b9150620003dc8262000397565b602082019050919050565b600060208201905081810360008301526200040281620003c0565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200044160178362000386565b91506200044e8262000409565b602082019050919050565b60006020820190508181036000830152620004748162000432565b9050919050565b60805160a051611786620004bd60003960008181610230015261034f0152600081816102840152818161038b0152818161040e01526104b301526117866000f3fe6080604052600436106100595760003560e01c80632c101b17146100655780633aeac4e11461008e57806351cff8d9146100b757806379ba5097146100e05780638da5cb5b146100f7578063f2fde38b1461012257610060565b3661006057005b600080fd5b34801561007157600080fd5b5061008c60048036038101906100879190610fb5565b61014b565b005b34801561009a57600080fd5b506100b560048036038101906100b09190611038565b610593565b005b3480156100c357600080fd5b506100de60048036038101906100d99190611078565b610649565b005b3480156100ec57600080fd5b506100f561070d565b005b34801561010357600080fd5b5061010c6108a2565b60405161011991906110b4565b60405180910390f35b34801561012e57600080fd5b5061014960048036038101906101449190611078565b6108cb565b005b60006040518060a001604052808560405160200161016991906110b4565b60405160208183030381529060405281526020018460405160200161018e919061114e565b6040516020818303038152906040528152602001600067ffffffffffffffff8111156101bd576101bc610e65565b5b6040519080825280602002602001820160405280156101f657816020015b6101e3610d68565b8152602001906001900390816101db5790505b50815260200160018081111561020f5761020e611170565b5b84600181111561022257610221611170565b5b1461022e576000610250565b7f00000000000000000000000000000000000000000000000000000000000000005b73ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166320487ded87846040518363ffffffff1660e01b81526004016102dd929190611394565b602060405180830381865afa1580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e91906113f0565b9050600060018081111561033557610334611170565b5b84600181111561034857610347611170565b5b036104b1577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000846040518363ffffffff1660e01b81526004016103c892919061142c565b6020604051808303816000875af11580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b919061148d565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f988856040518363ffffffff1660e01b8152600401610467929190611394565b6020604051808303816000875af1158015610486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104aa91906114f0565b9050610553565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166396f4e9f98389866040518463ffffffff1660e01b815260040161050d929190611394565b60206040518083038185885af115801561052b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061055091906114f0565b90505b7f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a81604051610582919061152c565b60405180910390a150505050505050565b61059b6108df565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105d691906110b4565b602060405180830381865afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061791906113f0565b905061064483828473ffffffffffffffffffffffffffffffffffffffff1661096f9092919063ffffffff16565b505050565b6106516108df565b600047905060008273ffffffffffffffffffffffffffffffffffffffff168260405161067c90611578565b60006040518083038185875af1925050503d80600081146106b9576040519150601f19603f3d011682016040523d82523d6000602084013e6106be565b606091505b5050905080610708573383836040517f9d11f5630000000000000000000000000000000000000000000000000000000081526004016106ff9392919061158d565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461079d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079490611610565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6108d36108df565b6108dc816109ee565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461096d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109649061167c565b60405180910390fd5b565b6109e9838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016109a292919061142c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b1a565b505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a53906116e8565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000610b45828473ffffffffffffffffffffffffffffffffffffffff16610bb190919063ffffffff16565b90506000815114158015610b6a575080806020019051810190610b68919061148d565b155b15610bac57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610ba391906110b4565b60405180910390fd5b505050565b6060610bbf83836000610bc7565b905092915050565b606081471015610c0e57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610c0591906110b4565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610c379190611739565b60006040518083038185875af1925050503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b5091509150610c89868383610c94565b925050509392505050565b606082610ca957610ca482610d23565b610d1b565b60008251148015610cd1575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610d1357836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610d0a91906110b4565b60405180910390fd5b819050610d1c565b5b9392505050565b600081511115610d365780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b610dc981610dac565b8114610dd457600080fd5b50565b600081359050610de681610dc0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e1782610dec565b9050919050565b610e2781610e0c565b8114610e3257600080fd5b50565b600081359050610e4481610e1e565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e9d82610e54565b810181811067ffffffffffffffff82111715610ebc57610ebb610e65565b5b80604052505050565b6000610ecf610d98565b9050610edb8282610e94565b919050565b600067ffffffffffffffff821115610efb57610efa610e65565b5b610f0482610e54565b9050602081019050919050565b82818337600083830152505050565b6000610f33610f2e84610ee0565b610ec5565b905082815260208101848484011115610f4f57610f4e610e4f565b5b610f5a848285610f11565b509392505050565b600082601f830112610f7757610f76610e4a565b5b8135610f87848260208601610f20565b91505092915050565b60028110610f9d57600080fd5b50565b600081359050610faf81610f90565b92915050565b60008060008060808587031215610fcf57610fce610da2565b5b6000610fdd87828801610dd7565b9450506020610fee87828801610e35565b935050604085013567ffffffffffffffff81111561100f5761100e610da7565b5b61101b87828801610f62565b925050606061102c87828801610fa0565b91505092959194509250565b6000806040838503121561104f5761104e610da2565b5b600061105d85828601610e35565b925050602061106e85828601610e35565b9150509250929050565b60006020828403121561108e5761108d610da2565b5b600061109c84828501610e35565b91505092915050565b6110ae81610e0c565b82525050565b60006020820190506110c960008301846110a5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111095780820151818401526020810190506110ee565b60008484015250505050565b6000611120826110cf565b61112a81856110da565b935061113a8185602086016110eb565b61114381610e54565b840191505092915050565b600060208201905081810360008301526111688184611115565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6111a881610dac565b82525050565b600081519050919050565b600082825260208201905092915050565b60006111d5826111ae565b6111df81856111b9565b93506111ef8185602086016110eb565b6111f881610e54565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61123881610e0c565b82525050565b6000819050919050565b6112518161123e565b82525050565b60408201600082015161126d600085018261122f565b5060208201516112806020850182611248565b50505050565b60006112928383611257565b60408301905092915050565b6000602082019050919050565b60006112b682611203565b6112c0818561120e565b93506112cb8361121f565b8060005b838110156112fc5781516112e38882611286565b97506112ee8361129e565b9250506001810190506112cf565b5085935050505092915050565b600060a083016000830151848203600086015261132682826111ca565b9150506020830151848203602086015261134082826111ca565b9150506040830151848203604086015261135a82826112ab565b915050606083015161136f606086018261122f565b506080830151848203608086015261138782826111ca565b9150508091505092915050565b60006040820190506113a9600083018561119f565b81810360208301526113bb8184611309565b90509392505050565b6113cd8161123e565b81146113d857600080fd5b50565b6000815190506113ea816113c4565b92915050565b60006020828403121561140657611405610da2565b5b6000611414848285016113db565b91505092915050565b6114268161123e565b82525050565b600060408201905061144160008301856110a5565b61144e602083018461141d565b9392505050565b60008115159050919050565b61146a81611455565b811461147557600080fd5b50565b60008151905061148781611461565b92915050565b6000602082840312156114a3576114a2610da2565b5b60006114b184828501611478565b91505092915050565b6000819050919050565b6114cd816114ba565b81146114d857600080fd5b50565b6000815190506114ea816114c4565b92915050565b60006020828403121561150657611505610da2565b5b6000611514848285016114db565b91505092915050565b611526816114ba565b82525050565b6000602082019050611541600083018461151d565b92915050565b600081905092915050565b50565b6000611562600083611547565b915061156d82611552565b600082019050919050565b600061158382611555565b9150819050919050565b60006060820190506115a260008301866110a5565b6115af60208301856110a5565b6115bc604083018461141d565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006115fa6016836110da565b9150611605826115c4565b602082019050919050565b60006020820190508181036000830152611629816115ed565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006116666016836110da565b915061167182611630565b602082019050919050565b6000602082019050818103600083015261169581611659565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006116d26017836110da565b91506116dd8261169c565b602082019050919050565b60006020820190508181036000830152611701816116c5565b9050919050565b6000611713826111ae565b61171d8185611547565b935061172d8185602086016110eb565b80840191505092915050565b60006117458284611708565b91508190509291505056fea2646970667358221220ef2910b7ed930bf4e7f642e6d091ba6ea2477ff7bb414bcdc9f98bf5326942d564736f6c63430008180033";

type BasicMessageSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicMessageSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicMessageSender__factory extends ContractFactory {
  constructor(...args: BasicMessageSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, link, overrides || {});
  }
  override deploy(
    router: AddressLike,
    link: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, link, overrides || {}) as Promise<
      BasicMessageSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BasicMessageSender__factory {
    return super.connect(runner) as BasicMessageSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicMessageSenderInterface {
    return new Interface(_abi) as BasicMessageSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasicMessageSender {
    return new Contract(address, _abi, runner) as unknown as BasicMessageSender;
  }
}
