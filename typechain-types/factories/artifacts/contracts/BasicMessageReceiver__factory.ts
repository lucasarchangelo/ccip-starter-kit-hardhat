/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicMessageReceiver,
  BasicMessageReceiverInterface,
} from "../../../artifacts/contracts/BasicMessageReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "latestMessageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "latestSourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "latestSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "latestMessage",
        type: "string",
      },
    ],
    name: "MessageReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestMessageDetails",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200216038038062002160833981810160405281019062000037919062000382565b3380600083600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b15760006040517fd7f73334000000000000000000000000000000000000000000000000000000008152600401620000a89190620003c5565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000158576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014f9062000443565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620001df57620001de81620001e960201b60201c565b5b50505050620004d7565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200025a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200025190620004b5565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200034a826200031d565b9050919050565b6200035c816200033d565b81146200036857600080fd5b50565b6000815190506200037c8162000351565b92915050565b6000602082840312156200039b576200039a62000318565b5b6000620003ab848285016200036b565b91505092915050565b620003bf816200033d565b82525050565b6000602082019050620003dc6000830184620003b4565b92915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006200042b601883620003e2565b91506200043882620003f3565b602082019050919050565b600060208201905081810360008301526200045e816200041c565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006200049d601783620003e2565b9150620004aa8262000465565b602082019050919050565b60006020820190508181036000830152620004d0816200048e565b9050919050565b608051611c66620004fa6000396000818161066201526107320152611c666000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806379ba50971161006657806379ba50971461012157806385572ffb1461012b5780638da5cb5b14610147578063b0f479a114610165578063f2fde38b1461018357610093565b806301ffc9a7146100985780633394e6f4146100c85780633aeac4e1146100e957806351cff8d914610105575b600080fd5b6100b260048036038101906100ad9190610d91565b61019f565b6040516100bf9190610dd9565b60405180910390f35b6100d0610271565b6040516100e09493929190610f01565b60405180910390f35b61010360048036038101906100fe9190610f79565b610351565b005b61011f600480360381019061011a9190610fb9565b610407565b005b6101296104cb565b005b6101456004803603810190610140919061100a565b610660565b005b61014f610705565b60405161015c9190611053565b60405180910390f35b61016d61072e565b60405161017a9190611053565b60405180910390f35b61019d60048036038101906101989190610fb9565b610756565b005b60007f85572ffb000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061026a57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b60008060006060600254600360009054906101000a900467ffffffffffffffff16600360089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660048080546102c39061109d565b80601f01602080910402602001604051908101604052809291908181526020018280546102ef9061109d565b801561033c5780601f106103115761010080835404028352916020019161033c565b820191906000526020600020905b81548152906001019060200180831161031f57829003601f168201915b50505050509050935093509350935090919293565b61035961076a565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103949190611053565b602060405180830381865afa1580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d59190611104565b905061040283828473ffffffffffffffffffffffffffffffffffffffff166107fa9092919063ffffffff16565b505050565b61040f61076a565b600047905060008273ffffffffffffffffffffffffffffffffffffffff168260405161043a90611162565b60006040518083038185875af1925050503d8060008114610477576040519150601f19603f3d011682016040523d82523d6000602084013e61047c565b606091505b50509050806104c6573383836040517f9d11f5630000000000000000000000000000000000000000000000000000000081526004016104bd93929190611186565b60405180910390fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290611209565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106f057336040517fd7f733340000000000000000000000000000000000000000000000000000000081526004016106e79190611053565b60405180910390fd5b610702816106fd906115cd565b610879565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b61075e61076a565b610767816109ab565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ef9061162c565b60405180910390fd5b565b610874838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161082d92919061164c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610ad7565b505050565b80600001516002819055508060200151600360006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555080604001518060200190518101906108c991906116b3565b600360086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080606001518060200190518101906109219190611781565b6004908161092f9190611976565b507fb1e312a29937cc11967b0e4a346fef1ae132424ebaba9dc6d90249dba053e87c600254600360009054906101000a900467ffffffffffffffff16600360089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046040516109a09493929190611acc565b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611b64565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b6000610b02828473ffffffffffffffffffffffffffffffffffffffff16610b6e90919063ffffffff16565b90506000815114158015610b27575080806020019051810190610b259190611bb0565b155b15610b6957826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b609190611053565b60405180910390fd5b505050565b6060610b7c83836000610b84565b905092915050565b606081471015610bcb57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401610bc29190611053565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168486604051610bf49190611c19565b60006040518083038185875af1925050503d8060008114610c31576040519150601f19603f3d011682016040523d82523d6000602084013e610c36565b606091505b5091509150610c46868383610c51565b925050509392505050565b606082610c6657610c6182610ce0565b610cd8565b60008251148015610c8e575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610cd057836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610cc79190611053565b60405180910390fd5b819050610cd9565b5b9392505050565b600081511115610cf35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d6e81610d39565b8114610d7957600080fd5b50565b600081359050610d8b81610d65565b92915050565b600060208284031215610da757610da6610d2f565b5b6000610db584828501610d7c565b91505092915050565b60008115159050919050565b610dd381610dbe565b82525050565b6000602082019050610dee6000830184610dca565b92915050565b6000819050919050565b610e0781610df4565b82525050565b600067ffffffffffffffff82169050919050565b610e2a81610e0d565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e5b82610e30565b9050919050565b610e6b81610e50565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610eab578082015181840152602081019050610e90565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ed382610e71565b610edd8185610e7c565b9350610eed818560208601610e8d565b610ef681610eb7565b840191505092915050565b6000608082019050610f166000830187610dfe565b610f236020830186610e21565b610f306040830185610e62565b8181036060830152610f428184610ec8565b905095945050505050565b610f5681610e50565b8114610f6157600080fd5b50565b600081359050610f7381610f4d565b92915050565b60008060408385031215610f9057610f8f610d2f565b5b6000610f9e85828601610f64565b9250506020610faf85828601610f64565b9150509250929050565b600060208284031215610fcf57610fce610d2f565b5b6000610fdd84828501610f64565b91505092915050565b600080fd5b600060a0828403121561100157611000610fe6565b5b81905092915050565b6000602082840312156110205761101f610d2f565b5b600082013567ffffffffffffffff81111561103e5761103d610d34565b5b61104a84828501610feb565b91505092915050565b60006020820190506110686000830184610e62565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110b557607f821691505b6020821081036110c8576110c761106e565b5b50919050565b6000819050919050565b6110e1816110ce565b81146110ec57600080fd5b50565b6000815190506110fe816110d8565b92915050565b60006020828403121561111a57611119610d2f565b5b6000611128848285016110ef565b91505092915050565b600081905092915050565b50565b600061114c600083611131565b91506111578261113c565b600082019050919050565b600061116d8261113f565b9150819050919050565b611180816110ce565b82525050565b600060608201905061119b6000830186610e62565b6111a86020830185610e62565b6111b56040830184611177565b949350505050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006111f3601683610e7c565b91506111fe826111bd565b602082019050919050565b60006020820190508181036000830152611222816111e6565b9050919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61126682610eb7565b810181811067ffffffffffffffff821117156112855761128461122e565b5b80604052505050565b6000611298610d25565b90506112a4828261125d565b919050565b600080fd5b6112b781610df4565b81146112c257600080fd5b50565b6000813590506112d4816112ae565b92915050565b6112e381610e0d565b81146112ee57600080fd5b50565b600081359050611300816112da565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561132b5761132a61122e565b5b61133482610eb7565b9050602081019050919050565b82818337600083830152505050565b600061136361135e84611310565b61128e565b90508281526020810184848401111561137f5761137e61130b565b5b61138a848285611341565b509392505050565b600082601f8301126113a7576113a6611306565b5b81356113b7848260208601611350565b91505092915050565b600067ffffffffffffffff8211156113db576113da61122e565b5b602082029050602081019050919050565b600080fd5b600081359050611400816110d8565b92915050565b60006040828403121561141c5761141b611229565b5b611426604061128e565b9050600061143684828501610f64565b600083015250602061144a848285016113f1565b60208301525092915050565b6000611469611464846113c0565b61128e565b9050808382526020820190506040840283018581111561148c5761148b6113ec565b5b835b818110156114b557806114a18882611406565b84526020840193505060408101905061148e565b5050509392505050565b600082601f8301126114d4576114d3611306565b5b81356114e4848260208601611456565b91505092915050565b600060a0828403121561150357611502611229565b5b61150d60a061128e565b9050600061151d848285016112c5565b6000830152506020611531848285016112f1565b602083015250604082013567ffffffffffffffff811115611555576115546112a9565b5b61156184828501611392565b604083015250606082013567ffffffffffffffff811115611585576115846112a9565b5b61159184828501611392565b606083015250608082013567ffffffffffffffff8111156115b5576115b46112a9565b5b6115c1848285016114bf565b60808301525092915050565b60006115d936836114ed565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b6000611616601683610e7c565b9150611621826115e0565b602082019050919050565b6000602082019050818103600083015261164581611609565b9050919050565b60006040820190506116616000830185610e62565b61166e6020830184611177565b9392505050565b600061168082610e30565b9050919050565b61169081611675565b811461169b57600080fd5b50565b6000815190506116ad81611687565b92915050565b6000602082840312156116c9576116c8610d2f565b5b60006116d78482850161169e565b91505092915050565b600067ffffffffffffffff8211156116fb576116fa61122e565b5b61170482610eb7565b9050602081019050919050565b600061172461171f846116e0565b61128e565b9050828152602081018484840111156117405761173f61130b565b5b61174b848285610e8d565b509392505050565b600082601f83011261176857611767611306565b5b8151611778848260208601611711565b91505092915050565b60006020828403121561179757611796610d2f565b5b600082015167ffffffffffffffff8111156117b5576117b4610d34565b5b6117c184828501611753565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261182c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117ef565b61183686836117ef565b95508019841693508086168417925050509392505050565b6000819050919050565b600061187361186e611869846110ce565b61184e565b6110ce565b9050919050565b6000819050919050565b61188d83611858565b6118a16118998261187a565b8484546117fc565b825550505050565b600090565b6118b66118a9565b6118c1818484611884565b505050565b5b818110156118e5576118da6000826118ae565b6001810190506118c7565b5050565b601f82111561192a576118fb816117ca565b611904846117df565b81016020851015611913578190505b61192761191f856117df565b8301826118c6565b50505b505050565b600082821c905092915050565b600061194d6000198460080261192f565b1980831691505092915050565b6000611966838361193c565b9150826002028217905092915050565b61197f82610e71565b67ffffffffffffffff8111156119985761199761122e565b5b6119a2825461109d565b6119ad8282856118e9565b600060209050601f8311600181146119e057600084156119ce578287015190505b6119d8858261195a565b865550611a40565b601f1984166119ee866117ca565b60005b82811015611a16578489015182556001820191506020850194506020810190506119f1565b86831015611a335784890151611a2f601f89168261193c565b8355505b6001600288020188555050505b505050505050565b60008154611a558161109d565b611a5f8186610e7c565b94506001821660008114611a7a5760018114611a9057611ac3565b60ff198316865281151560200286019350611ac3565b611a99856117ca565b60005b83811015611abb57815481890152600182019150602081019050611a9c565b808801955050505b50505092915050565b6000608082019050611ae16000830187610dfe565b611aee6020830186610e21565b611afb6040830185610e62565b8181036060830152611b0d8184611a48565b905095945050505050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b6000611b4e601783610e7c565b9150611b5982611b18565b602082019050919050565b60006020820190508181036000830152611b7d81611b41565b9050919050565b611b8d81610dbe565b8114611b9857600080fd5b50565b600081519050611baa81611b84565b92915050565b600060208284031215611bc657611bc5610d2f565b5b6000611bd484828501611b9b565b91505092915050565b600081519050919050565b6000611bf382611bdd565b611bfd8185611131565b9350611c0d818560208601610e8d565b80840191505092915050565b6000611c258284611be8565b91508190509291505056fea26469706673582212202345f6011106b6c580cd58a2bc384957b27800dc46b51d6c79d6a6fe68db325e64736f6c63430008180033";

type BasicMessageReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicMessageReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicMessageReceiver__factory extends ContractFactory {
  constructor(...args: BasicMessageReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(router, overrides || {});
  }
  override deploy(
    router: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(router, overrides || {}) as Promise<
      BasicMessageReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BasicMessageReceiver__factory {
    return super.connect(runner) as BasicMessageReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicMessageReceiverInterface {
    return new Interface(_abi) as BasicMessageReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasicMessageReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BasicMessageReceiver;
  }
}
